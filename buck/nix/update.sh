#! /usr/bin/env bash
set -e
set -o pipefail

# NOTE: you should occasionally do this from a shell:
#
#     $ nix run nixpkgs#shellcheck -- ./buck/nix/update.sh

if [ "$1" = "toolchains" ]; then
  root=$(sl root)
  nix build --print-out-paths "${root}/buck/nix#world"

  set -x
  jq -r '.toolchainPackages | to_entries[] | [ .key, .value ] | join(" ")' ./result \
    | while read -r name out; do
        p=$(nix path-info --derivation "${root}/buck/nix#toolchains/${name}");
        echo "{ \"${name}\": { \"drv\": \"${p}\", \"out\": \"${out}\" } }"
      done \
    | jq -n 'reduce inputs as $in (null; . + $in)' \
    | (cat <<EOF
# SPDX-License-Identifier: MIT OR Apache-2.0

# NOTE: DO NOT EDIT MANUALLY!
# NOTE: This file is @generated by the following command:
#
#    \$(sl root)/buck/nix/update.sh toolchains
#
# NOTE: Please run the above command to regenerate this file.

nix_toolchains = $(cat /dev/stdin)
EOF
  ) > "${root}/buck/nix/toolchains.bzl"
  rm ./result && exit 0

elif [ "$1" = "flake" ]; then
  root=$(sl root)
  nix flake update "${root}/buck/nix"
else
  echo "Usage: $0 [flake|toolchains]"
  exit 1
fi
