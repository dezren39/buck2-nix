# Enable the nix-community direnv integration
if ! has nix_direnv_version || ! nix_direnv_version 2.2.0; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.2.0/direnvrc" "sha256-5EwyKnkJNQeXrRkYbwwRBcXbibosCJqyIUuz9Xq+LRc="
fi

# [tag:nix-direnv-watch-nix-files] Make sure we watch all files relevant to the
# "boostrap phase" here, so that changes appropriately cause the shell to be
# reloaded. Any extra nix files situated near the Flake should be added here.
nix_direnv_watch_file buck/nix/buck2/Cargo.lock buck/nix/buck2/default.nix
nix_direnv_watch_file buck/nix/toolchains/default.nix

# Enable the flake. We need to do this first for 'jq' below...
# XXX FIXME: should we just use grep?
use flake ./buck/nix

MSNV="2.12.0"
OURNV=$(nix eval --raw --expr "builtins.nixVersion")
vercomp=$(nix eval --expr "builtins.compareVersions \"${OURNV}\" \"${MSNV}\"")
if [ "$vercomp" = "-1" ]; then
  cat <<-EOF

ERROR: Your Nix is older than the "Minimum Supported Nix Version" (MSNV).

  Your Nix: ${OURNV}
      MSNV: ${MSNV}

This build can't be guaranteed to succeed correctly or be free of bugs that
the system may otherwise guarantee.

If you can't freely upgrade Nix, then please open a discussion if you would
like the minimum supported Nix version to be adjusted.

EOF

  [ -z "$NIX_ALLOW_UNSUPPORTED_VERSION" ] && exit 1
  printf "NOTICE: Continuing despite unsupported Nix version.\n\n"
fi

# Make sure the user has [ref:ca-derivations] enabled; otherwise, the ability to fetch
# derivations via Nix won't work due to the lack of self-authentication.
if [ $(nix show-config --json | jq '."experimental-features".value | contains(["ca-derivations"])') = "false" ]; then
  cat <<-EOF

ERROR: You must enable the "ca-derivations" in your Nix configuration to use this project.
See https://nixos.wiki/wiki/Ca-derivations for more information and modify either:
  - your /etc/nixos/configuration.nix'
  - your /etc/nix/nix.conf'
EOF
  exit 1
fi
